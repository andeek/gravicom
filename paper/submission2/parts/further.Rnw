In this section, we will briefly present two ideas for extending our work on gravicom.  The first future extension involves potentially improving community detection through integration of gravicom with algorithmic approaches for identifying communities, while the second possible extension, dynamic temporal graph visualization, will allow for the analysis of changing graphs over time in gravicom.

\subsection{Integrated Algorithmic Community Detection}
\label{sec:algorithmic}
The idea behind integrated algorithmic community detection is to combine the benefits of human detection of communities with algorithmic detection. Human detection using gravicom as described in this paper could serve as an initialization phase of community detection. From there, an iterative algorithm would be available to run in the background. The algorithm might ideally run step-by-step and send results back to the user, which serves two purposes. First, the user can visually track how the algorithm is detecting communities by showing what groups are created at each iteration of the clustering algorithm. This transition could help the user to track progression of the algorithm. Being able to visually track changes might better assist the user to understand what is happening within the algorithm, rather than a black box method. Second, in between iterations of the algorithm, the user could potentially choose to accept or reject changes made by the algorithm. The user could make adjustments and send the updated results back to the algorithm. This checkpoint would in effect create flexible stopping criteria.  For example, suppose the algorithm, running step-by-step, still has remaining steps before meeting the stopping criteria.  A user could decide at each point whether to continue through the remaining steps or stop at a specific point.  Similarly, suppose the algorithm has met the stopping criteria but the user identifies the need to perform additional iterations.  The integration of human and algorithmic detection would allow the user to stop or continue as necessary.

A third possibility is to use gravicom for post-processing the results of a community detection algorithm. In instances where a graph is very large or does not have a clear community structure, it may be preferable to first use an algorithmic approach as an initial step. Visual community detection could then be used to fine tune the results. 

Because we built gravicom on the shiny framework, it is not a major step to add this feature. We already have the ability to send a current status of a graph clustering to R running on the server, perform manipulations, and send the processed graph back. The next step would be to implement the algorithm in R, using, for example, the igraph package.

\subsection{Dynamic Temporal Community Visualization}
With the increasing ubiquity of streaming and online data, the concept of dynamic temporal community detection has garnered interest in the recent literature. There have been multiple algorithmic approaches to solving the issue of tracking communities in dynamic networks over time while maintaining smooth transitions, including \citep{greene2010tracking, xie2013labelrankt, kawadia2012sequential}.

The idea for dynamic temporal community visualization is that a user would be able to view a dynamic graph  and communities across time, specifically how the edges change between nodes. Currently, the ability to track the change of relationships from one time to the next is missing in gravicom. However, the ability to view a graph dynamically would allow the user to assess the community structure across time. A feature that would aid this process is the addition of optional labels on some of the nodes in the graph. Optional labels, along with an ability to step through time, would allow the user to focus on the shift in relationships among nodes temporally. This is similar to the concept of label tracking presented in \citep{xie2013labelrankt}, however is accomplished visually rather than algorithmically.

\begin{figure}[hbt]
\centering
\includegraphics[width=\textwidth]{images/further_got.png}
\caption{\label{fig:further_got} A look at the relationships between characters over time for all five books in A Song of Ice and Fire by George R. R. Martin in terms of mutual events.}
\end{figure}

As an example to illustrate the potential for temporal visual community detection, we use here a series of novels, A Song of Ice and Fire \citep{martin1996game, martin1998clash, martin2000storm, martin2005feast, martin2011dance}. These data were compiled by Jerome Cukier using two fan-maintained resources on the series \citep{cukier2012got}. This data set contains events that occur for each character for each chapter in the book as well as information on the chapters, books, and characters themselves. This provides temporal snapshots of the relationships between characters at the end of each book, which we use to demonstrate visualization of temporally-varying community structures. To re-iterate, this analysis will not be dynamic within gravicom (which again requires development) but illustrates the merging of temporal networks and each shapshot requires separate processing in gravicom at this point (though future developments could refine this process).

From this relational structure we are able to create a graph where each node is a character and each edge is the occurrence of an ``important event" happening between the two characters in the same chapter. We categorize an ``important event" as any event that is not simply a mention of either character name.  Looking at important events in the same chapter, one can examine how relationships between characters change from one chapter to the next. We performed this analysis for each book separately and we present the results in Figure~\ref{fig:further_got}. The first striking feature from this visualization is the stark difference in how characters interact from book two to book three. In book two, there are many medium sized clusters in evidence, indicating many disparate events affecting a mid-size amount of characters. To the contrary, book 3 shows one very large event occurring and then many other events between a small amount of characters. In fact, the third book in the series, A Storm of Swords, houses a brutal massacre in which over 10 major characters are killed. 

This example illustrates the idea of time-dependent communities, though lacking the dynamic ability to track the graph over time. While this analysis can be seen as five separate analyses, the extension presented in this section would allow for a single analsysis of the data over time. 


